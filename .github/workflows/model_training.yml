name: model-training
on:
  workflow_dispatch:
    inputs:
      compute_instance:
        default: gha-ci
        required: false
        description: name of compute instance
jobs:
  call-pytests:
    uses: ./.github/workflows/pytests.yml
  run-pipeline:
    needs: call-pytests
    runs-on: ubuntu-latest
    environment: dev
    env:
      SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      COMPUTE_INSTANCE: ${{ github.event.inputs.compute_instance }}
      RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
      WORKSPACE_NAME: ${{ vars.WORKSPACE_NAME }}
      ENVIRONMENT_NAME: ${GITHUB_REPOSITORY#*/}-env
    steps:
    - uses: actions/checkout@v4
    - uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - run: az extension add -n ml -y
    - name: create or start compute instance if necessary
      run: |
        status=$(az ml compute show -n ${COMPUTE_INSTANCE} -w ${WORKSPACE_NAME} -g ${RESOURCE_GROUP} --query state -o tsv 2>/dev/null || echo "NotFound")
        if [ "$status" = "NotFound" ]; then
          echo "Compute instance does not exist. Creating..."
          az ml compute create -n ${COMPUTE_INSTANCE} -w ${WORKSPACE_NAME} -g ${RESOURCE_GROUP} --size Standard_E4ds_v4 --type ComputeInstance
        elif [ "$status" != "Running" ]; then
          echo "Compute instance exists but is not running. Starting it..."
          az ml compute start -n ${COMPUTE_INSTANCE} -w ${WORKSPACE_NAME} -g ${RESOURCE_GROUP}
        else
          echo "Compute instance is already running."
        fi
    - uses: domreichl/numeraz@main
    - run: echo $SUBSCRIPTION_ID
    - run: echo $COMPUTE_INSTANCE
    - run: echo $RESOURCE_GROUP
    - run: echo $WORKSPACE_NAME
    - run: echo $ENVIRONMENT_NAME
    - run: uv run naz pipeline model_training
