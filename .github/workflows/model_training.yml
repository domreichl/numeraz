name: pipeline-model-training
on:
  workflow_dispatch:
    inputs:
      subscription_id:
        required: true
      compute_instance_name:
        default: gha-ci
        required: false
jobs:
  setup-and-run-pipeline:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: install az ml
      run: az extension add -n ml -y
    - name: install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    - name: install venv
      run: uv venv -p 3.11.10
    - run: source .venv/bin/activate
    - name: install dependencies
      run: uv pip install -r pyproject.toml
    - name: install naz project
      run: uv pip install .
    - name: create compute instance
      run: |
        az ml compute create -w numeraz-ws -g numeraz-rg \
        -n ${{ github.event.inputs.compute_instance_name }} \
        -d --size Standard_E4ds_v4 --type ComputeInstance
      continue-on-error: true
    - name: start compute instance
      run: az ml compute start -n ${{ github.event.inputs.compute_instance_name }} -w numeraz-ws -g numeraz-rg
      continue-on-error: true
    - name: update components
      run: |
        uv run naz component preprocess_data && \
        uv run naz component train_base_models && \
        uv run naz component evaluate_ensembles && \
        uv run naz component build_prod_model
    - name: write resources.json
      run: |
        cat <<EOF > resources.json
        {"subscription_id": "${{ github.event.inputs.subscription_id }}",
        "resource_group": "${GITHUB_REPOSITORY#*/}-rg",
        "workspace_name": "${GITHUB_REPOSITORY#*/}-ws",
        "compute_instance": "${{ github.event.inputs.compute_instance_name }}",
        "environment_name": "${GITHUB_REPOSITORY#*/}-env"}
        EOF
    - name: run job
      run: uv run naz pipeline model_training
